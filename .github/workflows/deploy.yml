name: Deploy .NET Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'
    
    - name: Find and update version in .csproj
      run: |
        $projectFile = Get-ChildItem -Recurse -Filter *.csproj | Select-Object -First 1
        if (-not $projectFile) {
          Write-Error "No .csproj file found in the repository."
          exit 1
        }

        $csprojXml = [xml](Get-Content $projectFile.FullName)
        $csprojVersion = [System.Version]$csprojXml.Project.PropertyGroup.Version
        $newVersion = [System.Version]::new($csprojVersion.Major, 0, ${{ github.run_number }})

        $csprojXml.Project.PropertyGroup.Version = $newVersion.ToString()
        $csprojXml.Save($projectFile.FullName)

        Write-Output "Updated version to $newVersion"

      shell: pwsh

    - name: Restore dependencies
      run: dotnet restore

    - name: Build the application
      run: dotnet build --no-restore --configuration Release

    - name: Publish the application
      run: dotnet publish --configuration Release --output ./publish

# Things to try:
# ( ) His source code is a little diff. Try his version instead:
# ( ) Can we accomodate for there being no version property?
# ( ) What did he mean by the "out filename could be arranged like _windows.zip"
# ( ) Should we include the version in the zip file too?
# ( ) Try out the zip code as well.
# (X) What does the versioning code do anyway?
  # $newVersion = [System.Version]::new($csprojVersion.Major, 0, ${{ github.run_number }})
  # If your .csproj file currently has a version 1.2.3 and this is the 42nd run of your GitHub Action,
  # $csprojVersion.Major will be 1, and ${{ github.run_number }} will be 42.
  # The new version created will be 1.0.42.
# ( ) How is this version different: https://domburf.medium.com/updating-the-version-number-in-your-net-build-pipeline-128f9fd5b7e
# ( ) Should the versioning go in the validate or deploy?